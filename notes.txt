Features
* photo gallery instead of newspaper articles
* user has folders (with images unsorted within them)
  * image's folder can be chosen at upload time
  * folder can changed through edit dialog
    * or drag-and-drop between folders if I feel ambitious
* undo feature - queue up deletion while notification lasts, cancel if Undo clicked, actually delete when notification expires
* when connectivity lost, fall back to read-only mode (able to see metadata and album organization, no editing or viewing images)

Implementation
* Licensing
  * remove assets/images/exif.{jpg,tif}
  * check licenses of all Elixir/JS/Rust dependencies
  * _then_ add appropriate license to project 
    * if I want to include test images, make sure they're properly licensed as well
      * if not mine, make sure I have license to use
      * if mine, make sure I have license indicated (and personal info stripped) 
* Colors: green is #006600, purple is #660066 (if I still want to use that scheme, maybe not, maybe pick a new one with material palette thingy)
  * palette thingy: https://material.io/design/color/the-color-system.html#tools-for-picking-colors
* adding Tailwind, Alpine: https://github.com/josevalim/phx_esbuild_demo/pull/3/files
* alerts with Tailwind and Alpine: https://codepen.io/tommyia/pen/mdVyGJb?css-preprocessor=none
* Tailwind component library: https://www.tailwind-kit.com/started
* <img> from in-memory data: https://stackoverflow.com/questions/13950865/javascript-render-png-stored-as-uint8array-onto-canvas-element-without-data-uri/13952168#13952168